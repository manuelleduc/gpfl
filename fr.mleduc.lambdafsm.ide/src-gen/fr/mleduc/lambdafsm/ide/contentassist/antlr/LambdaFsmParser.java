/*
 * generated by Xtext 2.12.0
 */
package fr.mleduc.lambdafsm.ide.contentassist.antlr;

import com.google.inject.Inject;
import fr.mleduc.lambdafsm.ide.contentassist.antlr.internal.InternalLambdaFsmParser;
import fr.mleduc.lambdafsm.services.LambdaFsmGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class LambdaFsmParser extends AbstractContentAssistParser {

	@Inject
	private LambdaFsmGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalLambdaFsmParser createParser() {
		InternalLambdaFsmParser result = new InternalLambdaFsmParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStateAccess().getAlternatives(), "rule__State__Alternatives");
					put(grammarAccess.getStateAccess().getGroup_0(), "rule__State__Group_0__0");
					put(grammarAccess.getStateAccess().getGroup_0_4(), "rule__State__Group_0_4__0");
					put(grammarAccess.getStateAccess().getGroup_0_4_1(), "rule__State__Group_0_4_1__0");
					put(grammarAccess.getStateAccess().getGroup_2(), "rule__State__Group_2__0");
					put(grammarAccess.getStateAccess().getGroup_2_4(), "rule__State__Group_2_4__0");
					put(grammarAccess.getStateAccess().getGroup_2_4_1(), "rule__State__Group_2_4_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getFsmAccess().getGroup(), "rule__Fsm__Group__0");
					put(grammarAccess.getFsmStateAccess().getGroup(), "superState__Group__0");
					put(grammarAccess.getFsmStateAccess().getGroup_1(), "superState__Group_1__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getStateAccess().getNameAssignment_0_2(), "rule__State__NameAssignment_0_2");
					put(grammarAccess.getStateAccess().getParamsAssignment_0_4_0(), "rule__State__ParamsAssignment_0_4_0");
					put(grammarAccess.getStateAccess().getParamsAssignment_0_4_1_1(), "rule__State__ParamsAssignment_0_4_1_1");
					put(grammarAccess.getStateAccess().getStmtsAssignment_0_7(), "rule__State__StmtsAssignment_0_7");
					put(grammarAccess.getStateAccess().getMethodAssignment_2_2(), "rule__State__MethodAssignment_2_2");
					put(grammarAccess.getStateAccess().getParamsAssignment_2_4_0(), "rule__State__ParamsAssignment_2_4_0");
					put(grammarAccess.getStateAccess().getParamsAssignment_2_4_1_1(), "rule__State__ParamsAssignment_2_4_1_1");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getFsmAccess().getNameAssignment_1(), "rule__Fsm__NameAssignment_1");
					put(grammarAccess.getFsmAccess().getStateAssignment_4(), "rule__Fsm__StateAssignment_4");
					put(grammarAccess.getFsmAccess().getStatesAssignment_5(), "rule__Fsm__StatesAssignment_5");
					put(grammarAccess.getFsmStateAccess().getNameAssignment_0(), "superState__NameAssignment_0");
					put(grammarAccess.getFsmStateAccess().getTransitionsAssignment_1_1(), "superState__TransitionsAssignment_1_1");
					put(grammarAccess.getTransitionAccess().getNameAssignment_0(), "rule__Transition__NameAssignment_0");
					put(grammarAccess.getTransitionAccess().getStateAssignment_2(), "rule__Transition__StateAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public LambdaFsmGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(LambdaFsmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
