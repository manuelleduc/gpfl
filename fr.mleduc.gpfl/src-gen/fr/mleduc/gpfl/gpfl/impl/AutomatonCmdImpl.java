/**
 * generated by Xtext 2.13.0
 */
package fr.mleduc.gpfl.gpfl.impl;

import fr.mleduc.gpfl.gpfl.AutomataDef;
import fr.mleduc.gpfl.gpfl.AutomatonCmd;
import fr.mleduc.gpfl.gpfl.GpflPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.xtext.xbase.impl.XExpressionImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Automaton Cmd</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.mleduc.gpfl.gpfl.impl.AutomatonCmdImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.mleduc.gpfl.gpfl.impl.AutomatonCmdImpl#getAutomaton <em>Automaton</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AutomatonCmdImpl extends XExpressionImpl implements AutomatonCmd
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAutomaton() <em>Automaton</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAutomaton()
   * @generated
   * @ordered
   */
  protected AutomataDef automaton;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AutomatonCmdImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GpflPackage.Literals.AUTOMATON_CMD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GpflPackage.AUTOMATON_CMD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AutomataDef getAutomaton()
  {
    if (automaton != null && automaton.eIsProxy())
    {
      InternalEObject oldAutomaton = (InternalEObject)automaton;
      automaton = (AutomataDef)eResolveProxy(oldAutomaton);
      if (automaton != oldAutomaton)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GpflPackage.AUTOMATON_CMD__AUTOMATON, oldAutomaton, automaton));
      }
    }
    return automaton;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AutomataDef basicGetAutomaton()
  {
    return automaton;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAutomaton(AutomataDef newAutomaton)
  {
    AutomataDef oldAutomaton = automaton;
    automaton = newAutomaton;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GpflPackage.AUTOMATON_CMD__AUTOMATON, oldAutomaton, automaton));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GpflPackage.AUTOMATON_CMD__NAME:
        return getName();
      case GpflPackage.AUTOMATON_CMD__AUTOMATON:
        if (resolve) return getAutomaton();
        return basicGetAutomaton();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GpflPackage.AUTOMATON_CMD__NAME:
        setName((String)newValue);
        return;
      case GpflPackage.AUTOMATON_CMD__AUTOMATON:
        setAutomaton((AutomataDef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GpflPackage.AUTOMATON_CMD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GpflPackage.AUTOMATON_CMD__AUTOMATON:
        setAutomaton((AutomataDef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GpflPackage.AUTOMATON_CMD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GpflPackage.AUTOMATON_CMD__AUTOMATON:
        return automaton != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //AutomatonCmdImpl
