/**
 * generated by Xtext 2.12.0
 */
package fr.mleduc.lambdafsm.lambdaFsm.impl;

import fr.mleduc.lambdafsm.lambdaFsm.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LambdaFsmFactoryImpl extends EFactoryImpl implements LambdaFsmFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LambdaFsmFactory init()
  {
    try
    {
      LambdaFsmFactory theLambdaFsmFactory = (LambdaFsmFactory)EPackage.Registry.INSTANCE.getEFactory(LambdaFsmPackage.eNS_URI);
      if (theLambdaFsmFactory != null)
      {
        return theLambdaFsmFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LambdaFsmFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LambdaFsmFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LambdaFsmPackage.PARAMETER: return createParameter();
      case LambdaFsmPackage.METHOD_DEF: return createMethodDef();
      case LambdaFsmPackage.METHOD_CALL: return createMethodCall();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parameter createParameter()
  {
    ParameterImpl parameter = new ParameterImpl();
    return parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MethodDef createMethodDef()
  {
    MethodDefImpl methodDef = new MethodDefImpl();
    return methodDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MethodCall createMethodCall()
  {
    MethodCallImpl methodCall = new MethodCallImpl();
    return methodCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LambdaFsmPackage getLambdaFsmPackage()
  {
    return (LambdaFsmPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LambdaFsmPackage getPackage()
  {
    return LambdaFsmPackage.eINSTANCE;
  }

} //LambdaFsmFactoryImpl
